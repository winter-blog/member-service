buildscript {
    ext {
        queryDslVersion = "5.0.0"
        restdocsApiSpecVersion = "0.16.2"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    // querydsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    // rest docs
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"

}

group = 'com.devwinter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.5")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // easy-random
    testImplementation 'org.jeasy:easy-random-core:5.0.0'
    implementation 'net.datafaker:datafaker:1.8.0'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // https://mvnrepository.com/artifact/io.awspring.cloud/spring-cloud-starter-aws
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // swaggerUI 'org.webjars:swagger-ui:4.11.1'
    // testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"
    testAnnotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'io.rest-assured:rest-assured'
//    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
//    testImplementation "com.epages:restdocs-api-spec-restassured:${restdocsApiSpecVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// ===== querydsl start ===== //
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDir querydslDir
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// ===== querydsl end ===== //

openapi3 {
    setServer("http://ec2-3-34-53-11.ap-northeast-2.compute.amazonaws.com:8080/member-service/")
    title = "회원 서비스 API"
    description = "회원 서비스 API 문서"
    version = "v1"
    format = "yaml"
    outputFileNamePrefix = 'member-api-spec'
}

//task copyTest {
//    dependsOn("openapi3")
//    copy {
//        from "$buildDir/api-spec/openapi3.yaml"
//        into "src/main/resources/static/docs/."
//    }
//}